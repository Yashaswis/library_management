{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_projects\\\\library\\\\src\\\\Addbook.js\";\nimport React, { Component } from \"react\";\nimport './style.css';\nimport { Box } from \"@material-ui/core\";\nimport { Item } from \"react-bootstrap/lib/Breadcrumb\";\n\nclass Addbook extends Component {\n  // field=[];\n  constructor(props) {\n    super();\n    this.user = [];\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      field: [{\n        Bookid: \"1\",\n        BookName: \"authr\",\n        Author: \"bnmdbs \",\n        Edition: \" 2\",\n        Date: \"2020-03-17\"\n      }, {\n        Bookid: \"2\",\n        BookName: \"authr\",\n        Author: \"bnmdbs \",\n        Edition: \" 2\",\n        Date: \"2020-03-17\"\n      }, {\n        Bookid: \"3\",\n        BookName: \"authr\",\n        Author: \"bnmdbs \",\n        Edition: \" 2\",\n        Date: \"2020-03-17\"\n      }]\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    localStorage.setItem('field', JSON.stringify(this.state)); //     var storedNames = JSON.parse(localStorage.getItem(\"field\")); \n    //     // var myObjectJson = JSON.stringify(this.state);\n    //     // localStorage.setItem(\"field\",myObjectJson);\n    //     // var newMyObjectJSON = localStorage.getItem(\"field\");\n    //     // var newMyObject = JSON.parse(newMyObjectJSON);  \n  }\n\n  componentDidMount() {\n    try {\n      this.user = JSON.parse(localStorage.getItem('field'));\n\n      if (localStorage.getItem('field')) {\n        this.setState({\n          Bookid: this.user.Bookid,\n          BookName: this.user.BookName,\n          Author: this.user.Author,\n          Edition: this.user.Edition,\n          Date: this.user.Date\n        });\n      } else {\n        this.setState({\n          Bookid: '',\n          BookName: '',\n          Author: '',\n          Edition: '',\n          Date: ''\n        });\n      }\n    } catch {}\n  } // onSubmit (e){\n  //     e.preventDefault()\n  //     this.setState ( {\n  //         Bookid: \" \",\n  //        BookName:\" \",\n  //        Author:\" \",\n  //        Edition:\" \",\n  //        Date:\" \",\n  //     })\n  //  }\n\n\n  render() {\n    //  add() {\n    //     var title = this.title.value;\n    //     if(localStorage.getItem('field')==null) {\n    //         var field =[];\n    //         field.push(title);\n    //         localStorage.setItem('field',JSON.stringify(field));\n    //     }else{\n    //         var field= JSON.parse(localStorage.getItem('field'));\n    //         field.push(title);\n    //         localStorage.setItem('field',JSON.stringify(field));\n    //     }\n    //     this.setState({\n    //         field: JSON.parse(localStorage.getItem('field[]'))\n    //     });\n    // }\n    // {\n    return React.createElement(\"form\", {\n      className: \"Display_form\",\n      float: \"right\",\n      align: \"center\",\n      onSubmit: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Box, {\n      float: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Bookid: \", React.createElement(\"input\", {\n      name: \"Bookid\",\n      type: \"number\",\n      value: this.state.Bookid,\n      ref: \"title\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), \"BookName: \", React.createElement(\"input\", {\n      name: \"BookName\",\n      type: \"text\",\n      value: this.state.BookName,\n      ref: \"title\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), \"Author: \", React.createElement(\"input\", {\n      name: \"Author\",\n      type: \"text\",\n      value: this.state.Author,\n      ref: \"title\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), \"Edition: \", React.createElement(\"input\", {\n      name: \"Edition\",\n      type: \"text\",\n      value: this.state.Edition,\n      ref: \"title\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), \"Date: \", React.createElement(\"input\", {\n      name: \"Date\",\n      type: \"date\",\n      value: this.state.Date,\n      ref: \"title\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"submit \"), this.state.field && this.state.field.map(field => React.createElement(Item, {\n      key: field,\n      num: field,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Addbook; // onClick={this.add.bind(this)} onSubmit={this.SavaData}","map":{"version":3,"sources":["D:/React_projects/library/src/Addbook.js"],"names":["React","Component","Box","Item","Addbook","constructor","props","user","handleChange","event","setState","target","name","value","state","field","Bookid","BookName","Author","Edition","Date","bind","handleFormSubmit","e","preventDefault","localStorage","setItem","JSON","stringify","componentDidMount","parse","getItem","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport './style.css';\r\nimport { Box } from \"@material-ui/core\";\r\nimport { Item } from \"react-bootstrap/lib/Breadcrumb\";\r\nclass Addbook extends Component{\r\n     user=[];\r\n    // field=[];\r\n    constructor(props){\r\n       super();\r\n       this.state={ \r\n        field :[{   \r\n           Bookid: \"1\",\r\n           BookName:\"authr\",\r\n           Author:\"bnmdbs \",\r\n           Edition:\" 2\",\r\n           Date:\"2020-03-17\" },\r\n           {   \r\n            Bookid: \"2\",\r\n            BookName:\"authr\",\r\n            Author:\"bnmdbs \",\r\n            Edition:\" 2\",\r\n            Date:\"2020-03-17\" },\r\n            {   \r\n                Bookid: \"3\",\r\n                BookName:\"authr\",\r\n                Author:\"bnmdbs \",\r\n                Edition:\" 2\",\r\n                Date:\"2020-03-17\" }\r\n        ]\r\n       }\r\n      \r\n       this.handleChange=this.handleChange.bind(this);\r\n      this.handleFormSubmit=this.handleFormSubmit.bind(this);\r\n    }\r\n    \r\n    handleChange = (event) =>{\r\n        this.setState({[event.target.name]:event.target.value});\r\n        \r\n    }\r\n     handleFormSubmit(e) {\r\n            e.preventDefault()\r\n        localStorage.setItem('field',JSON.stringify(this.state));\r\n    //     var storedNames = JSON.parse(localStorage.getItem(\"field\")); \r\n    //     // var myObjectJson = JSON.stringify(this.state);\r\n    //     // localStorage.setItem(\"field\",myObjectJson);\r\n    //     // var newMyObjectJSON = localStorage.getItem(\"field\");\r\n    //     // var newMyObject = JSON.parse(newMyObjectJSON);  \r\n     }\r\n     \r\n    componentDidMount(){\r\n        try {\r\n            this.user=JSON.parse(localStorage.getItem('field'));\r\n            if(localStorage.getItem('field')){\r\n            this.setState({\r\n                Bookid:this.user.Bookid,\r\n                BookName:this.user.BookName,\r\n                Author:this.user.Author,\r\n                Edition:this.user.Edition,\r\n                Date:this.user.Date \r\n        \r\n        })\r\n    }else{\r\n        this.setState ( {\r\n            Bookid: '',\r\n           BookName:'',\r\n           Author:'',\r\n           Edition:'',\r\n           Date:'',\r\n           \r\n        })\r\n    }\r\n    }\r\n         catch {\r\n\r\n        }\r\n\r\n    }\r\n    // onSubmit (e){\r\n    //     e.preventDefault()\r\n    //     this.setState ( {\r\n    //         Bookid: \" \",\r\n    //        BookName:\" \",\r\n    //        Author:\" \",\r\n    //        Edition:\" \",\r\n    //        Date:\" \",\r\n           \r\n    //     })\r\n    \r\n    //  }\r\n    render(){\r\n    //  add() {\r\n    //     var title = this.title.value;\r\n    //     if(localStorage.getItem('field')==null) {\r\n    //         var field =[];\r\n    //         field.push(title);\r\n    //         localStorage.setItem('field',JSON.stringify(field));\r\n    //     }else{\r\n    //         var field= JSON.parse(localStorage.getItem('field'));\r\n    //         field.push(title);\r\n    //         localStorage.setItem('field',JSON.stringify(field));\r\n    //     }\r\n    //     this.setState({\r\n    //         field: JSON.parse(localStorage.getItem('field[]'))\r\n    //     });\r\n    // }\r\n    // {\r\n        return (\r\n        <form className=\"Display_form\"  float='right' align='center' onSubmit={this.handleFormSubmit} >\r\n            <Box float ='right'>\r\nBookid: <input name=\"Bookid\" type=\"number\" value={this.state.Bookid} ref='title' onChange={this.handleChange} />\r\n<br />\r\nBookName: <input name=\"BookName\" type=\"text\" value={this.state.BookName} ref='title' onChange={this.handleChange} />\r\n<br />\r\nAuthor: <input name=\"Author\" type=\"text\" value={this.state.Author} ref='title' onChange={this.handleChange}/>\r\n<br />\r\nEdition: <input name=\"Edition\" type=\"text\" value={this.state.Edition} ref='title' onChange={this.handleChange}/>\r\n<br />\r\nDate: <input name=\"Date\" type=\"date\" value={this.state.Date} ref='title' onChange={this.handleChange} />\r\n<br />\r\n<button type=\"submit\" >submit </button> \r\n{/* name=\"submit\"  /> */}\r\n{this.state.field && this.state.field.map((field) =>\r\n (<Item key={field} num={field} />))}\r\n</Box>\r\n</form>\r\n);\r\n        }\r\n    } \r\n\r\nexport default Addbook;\r\n// onClick={this.add.bind(this)} onSubmit={this.SavaData}"]},"metadata":{},"sourceType":"module"}